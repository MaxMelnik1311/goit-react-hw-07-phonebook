{"version":3,"sources":["styles.module.css","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phonebookOperations.js","redux/phoneBook/phoneBookSelectors.js","components/ContactForm/ContactForm.js","functions/isNameAvailable.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/NightRegimeToggler/NightRegimeToggler.js","pages/PhoneBookPage.js","components/Layout/Layout.js","components/Loading/Loading.js","App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filteredContacts","clearFilterValue","nightRegimeToggle","axios","defaults","baseURL","getContacts","state","phonebook","contacts","getFilter","filter","getRegime","nightRegime","getLoader","loader","getError","error","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","number","handleInputChange","e","preventDefault","target","value","setState","handleSubmit","props","person","some","item","alert","submitContactInfo","this","onSubmit","type","onChange","Component","mapDispatchToProps","items","dispatch","post","then","data","catch","connect","Contact","removeContact","id","onClick","contactList","deleteItem","delete","deleteContact","map","key","onChangeFilter","clearFilter","length","onToggle","PhoneBookPage","children","className","styles","layoutDay","layoutNight","container","Loading","loading","color","height","width","timeout","App","onFetchContacts","get","createReducer","payload","action","combineReducers","store","configureStore","reducer","phoneBookReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bda2428b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutDay\":\"styles_layoutDay___GXjx\",\"layoutNight\":\"styles_layoutNight__5zXVp\",\"night\":\"styles_night__1Ycm0\",\"loading\":\"styles_loading__1Xjqn\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('сontacts/addRequest');\r\nconst addContactSuccess = createAction('сontacts/addSuccess');\r\nconst addContactError = createAction('сontacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('сontacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('сontacts/fetchSuccess');\r\nconst fetchContactsError = createAction('сontacts/fetchError');\r\n\r\nconst deleteContactRequest = createAction('сontacts/deleteRequest');\r\nconst deleteContactSuccess = createAction('сontacts/deleteSuccess');\r\nconst deleteContactError = createAction('сontacts/deleteError');\r\n\r\nconst filteredContacts = createAction('phoneBook/filteredContacts');\r\nconst clearFilterValue = createAction('phoneBook/clearFilterValue');\r\n\r\nconst nightRegimeToggle = createAction('phoneBook/nightRegimeToggle');\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  clearFilterValue,\r\n  filteredContacts,\r\n  nightRegimeToggle,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phoneBookActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = items => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { ...items })\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { addContact, fetchContacts, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.phonebook.contacts;\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getRegime = state => state.phonebook.nightRegime;\r\nconst getLoader = state => state.phonebook.loader;\r\nconst getError = state => state.phonebook.error;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport {\r\n  getVisibleContacts,\r\n  getFilter,\r\n  getContacts,\r\n  getRegime,\r\n  getLoader,\r\n  getError,\r\n};\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phoneBook/phonebookOperations';\r\nimport { getContacts } from '../../redux/phoneBook/phoneBookSelectors';\r\nimport isNameAvailable from '../../functions/isNameAvailable';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  propTypes = {\r\n    submitContactInfo: T.func.isRequired,\r\n    contacts: T.arrayOf.isRequired,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (isNameAvailable(this.props.contacts, this.state.name)) {\r\n      return alert(`${this.state.name} is already exists in contacts!`);\r\n    }\r\n    this.props.submitContactInfo(this.state);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Name</h3>\r\n          <input\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n          />\r\n          <h3>Number</h3>\r\n          <input\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  submitContactInfo: addContact,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ContactForm);\r\n","export default function isNameAvailable(contacts, person) {\r\n  return contacts.some(item => item.name === person);\r\n}\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nconst Contact = ({ name, number, removeContact, id }) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button type=\"button\" onClick={() => removeContact(id)}>\r\n      Delete {name} from contact list\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.string.isRequired,\r\n  removeContact: T.func.isRequired,\r\n  id: T.string.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/phoneBook/phoneBookSelectors';\r\nimport { deleteContact } from '../../redux/phoneBook/phonebookOperations';\r\nimport Contact from './Contact';\r\n\r\nfunction ContactList({ contactList, deleteItem }) {\r\n  return (\r\n    <ul>\r\n      {contactList.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          removeContact={() => deleteItem(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactList: T.arrayOf({}).isRequired,\r\n  deleteItem: T.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contactList: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ContactList);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../redux/phoneBook/phoneBookSelectors';\r\nimport {\r\n  filteredContacts,\r\n  clearFilterValue,\r\n} from '../../redux/phoneBook/phoneBookActions';\r\n\r\nfunction Filter({ contacts, value, onChangeFilter, clearFilter }) {\r\n  if (contacts.length === 1) {\r\n    clearFilter();\r\n  }\r\n  return (\r\n    <>\r\n      {contacts.length > 1 && (\r\n        <div>\r\n          <input value={value} onChange={e => onChangeFilter(e.target.value)} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: T.string.isRequired,\r\n  onChangeFilter: T.func.isRequired,\r\n  contacts: T.shape.isRequired,\r\n  clearFilter: T.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: filteredContacts,\r\n  clearFilter: clearFilterValue,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Filter);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getRegime } from '../../redux/phoneBook/phoneBookSelectors';\r\nimport { nightRegimeToggle } from '../../redux/phoneBook/phoneBookActions';\r\n\r\nconst NightRegimeToggler = ({ nightRegime, onToggle }) => (\r\n  <>\r\n    <button type=\"button\" onClick={() => onToggle()}>\r\n      {nightRegime ? 'Night Regime' : 'Day Regime'}\r\n    </button>\r\n  </>\r\n);\r\n\r\nNightRegimeToggler.propTypes = {\r\n  nightRegime: T.bool.isRequired,\r\n  onToggle: T.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  nightRegime: getRegime(state),\r\n});\r\n\r\nconst mapDispatchToProps = { onToggle: nightRegimeToggle };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(NightRegimeToggler);\r\n","import React from 'react';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport NightRegimeToggler from '../components/NightRegimeToggler/NightRegimeToggler';\r\n\r\nconst PhoneBookPage = () => {\r\n  return (\r\n    <>\r\n      <NightRegimeToggler />\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhoneBookPage;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../../styles.module.css';\r\n\r\nconst Layout = ({ children, nightRegime }) => (\r\n  <div className={nightRegime ? styles.layoutDay : styles.layoutNight}>\r\n    <div className={styles.container}>{children}</div>\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: T.shape.isRequired,\r\n  nightRegime: T.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  nightRegime: state.phonebook.nightRegime,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport default class Loading extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.loading}>\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={5000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport T from 'prop-types';\r\nimport PhoneBookPage from './pages/PhoneBookPage';\r\nimport Layout from './components/Layout/Layout';\r\nimport Loading from './components/Loading/Loading';\r\nimport { getLoader, getError } from './redux/phoneBook/phoneBookSelectors';\r\nimport { fetchContacts } from './redux/phoneBook/phonebookOperations';\r\n\r\nclass App extends Component {\r\n  propTypes = {\r\n    onFetchContacts: T.func.isRequired,\r\n    loader: T.bool.isRequired,\r\n    error: T.shape.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { onFetchContacts } = this.props;\r\n    return onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { loader, error } = this.props;\r\n    return (\r\n      <Layout>\r\n        {loader && <Loading />}\r\n        {error === {} && <h2>There is some error in your last action here!</h2>}\r\n        <PhoneBookPage />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loader: getLoader(state),\r\n  error: getError(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: fetchContacts,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filteredContacts,\r\n  clearFilterValue,\r\n  nightRegimeToggle,\r\n} from './phoneBookActions';\r\n\r\nconst contacts = createReducer([], {\r\n  [addContactSuccess.type]: (state, { payload }) => [...state, payload],\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [deleteContactSuccess.type]: (state, { payload }) =>\r\n    state.filter(contact => payload !== contact.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [clearFilterValue.type]: (state, action) => '',\r\n  [filteredContacts.type]: (state, { payload }) => payload,\r\n});\r\n\r\nconst nightRegime = createReducer(true, {\r\n  [nightRegimeToggle]: state => !state,\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(\r\n  {},\r\n  {\r\n    [addContactError]: (state, { payload }) => payload,\r\n    [fetchContactsError]: (state, { payload }) => payload,\r\n    [deleteContactError]: (state, { payload }) => payload,\r\n  },\r\n);\r\nexport default combineReducers({\r\n  contacts,\r\n  nightRegime,\r\n  filter,\r\n  loader,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { phonebook: phoneBookReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}